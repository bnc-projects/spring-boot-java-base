plugins {
    id "org.springframework.boot" version "2.2.7.RELEASE"
    id "io.spring.dependency-management" version "1.0.9.RELEASE"
    id "com.palantir.docker" version "0.24.0"
    id "com.gorylenko.gradle-git-properties" version "2.2.0"
}

jar {
    archivesBaseName = rootProject.name
}

springBoot {
    buildInfo()
}

sonarqube {
    properties {
        property "sonar.projectKey", "${rootProject.name}:${project.name}"
        property "sonar.coverage.exclusions", "**/configuration/*"
        property "sonar.cpd.exclusions", "**/model/api/*,**/model/entity/*"
    }
}

if (!project.hasProperty("REPOSITORY_URI")) {
    ext.REPOSITORY_URI = jar.archiveBaseName.getOrNull()
}

if (!project.hasProperty("TAG")) {
    ext.TAG = jar.archiveVersion.getOrNull()
}

docker {
    name "${REPOSITORY_URI}:latest"
    tag "version", "${REPOSITORY_URI}:${TAG}"
    files bootJar.archiveFile.getOrNull()
}

dependencies {
    implementation project(':client')

    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator'
    implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-sleuth', version: '2.2.2.RELEASE'
    implementation group: 'io.micrometer', name: 'micrometer-registry-new-relic'
    implementation group: 'com.github.spotbugs', name: 'spotbugs-annotations', version: '3.1.12'

    testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test'
}
